{
  "version": 3,
  "sources": ["../../../app/routes/projects.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\projects.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\projects.tsx\");\n}\n// REMIX HMR END\n\n// app/routes/projects.tsx\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport { PrismaClient } from \"@prisma/client\";\nimport projectsStyles from \"../styles/projects.css\"; // Import Projects CSS\n\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: projectsStyles\n}];\nconst prisma = new PrismaClient();\nexport const loader = async () => {\n  const projects = await prisma.project.findMany();\n  return {\n    projects\n  };\n};\nexport default function Projects() {\n  _s();\n  const {\n    projects\n  } = useLoaderData();\n  return <div>\r\n      <h1>My Projects</h1>\r\n      <div className=\"projects-grid\">\r\n        {projects.map(project => <div key={project.id} className=\"project-card\">\r\n            <img src={project.imageUrl} alt={project.title} />\r\n            <h2>{project.title}</h2>\r\n            <p>{project.description}</p>\r\n            <a href={project.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              View Project\r\n            </a>\r\n          </div>)}\r\n      </div>\r\n    </div>;\n}\n_s(Projects, \"DZowJppIVR2fz7wqEJxMGbGJ2Is=\", false, function () {\n  return [useLoaderData];\n});\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAuBA,oBAA6B;AAoBvB;AA1CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC7B;AASO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AACD,IAAM,SAAS,IAAI,2BAAa;AAOjB,SAAR,WAA4B;AACjC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SACJ;AAAA,uDAAC,QAAG,2BAAJ;AAAA;AAAA;AAAA;AAAA,WAAe;AAAA,IACf,mDAAC,SAAI,WAAU,iBACZ,mBAAS,IAAI,aAAW,mDAAC,SAAqB,WAAU,gBACrD;AAAA,yDAAC,SAAI,KAAK,QAAQ,UAAU,KAAK,QAAQ,SAAzC;AAAA;AAAA;AAAA;AAAA,aAAgD;AAAA,MAChD,mDAAC,QAAI,kBAAQ,SAAb;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,OAAG,kBAAQ,eAAZ;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA,MACxB,mDAAC,OAAE,MAAM,QAAQ,KAAK,QAAO,UAAS,KAAI,uBAAsB,4BAAhE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAN+B,QAAQ,IAAlB;AAAA;AAAA;AAAA;AAAA,WAOvB,CAAM,KARV;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OAXG;AAAA;AAAA;AAAA;AAAA,SAYL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
